type Category {
    id: ID!
    name: String!
    slug: String
    products: [Product] @hasMany
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

input CategoryInput {
    id: ID
    name: String!
    slug: String
    products: ConnectProductsRelation
}

input ConnectCategoryRelation {
    id: ID
    name: String
    connect: ID
    create: [CategoryInput!]
    update: [CategoryInput!]
    upsert: [CategoryInput!]
    delete: [ID]
}

extend type Query {
    categories(
        search: String @scope(name: "search")
    ): [Category!]! @all
    categoriesPaginate: [Category!]! @paginate
}

extend type Mutation {
    upsertCategory(input: CategoryInput! @spread): Category @upsert #@can(ability: "upsert")
    deleteCategory(id: [ID!] @eq): [Category] @delete #@can(ability: "delete", find: "id")
    restoreCategory(id: [ID!] @eq): [Category] @restore #@can(ability: "restore", find: "id")
}