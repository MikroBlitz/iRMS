type Category {
    id: ID!
    name: String!
    slug: String
    products: [Product] @hasMany
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

input CategoryInput {
    id: ID
    name: String!
    slug: String
    products: ConnectProductsRelation
}

input ConnectCategoryRelation {
    connect: ID
    upsert: CategoryInput
    disconnect: Boolean
    delete: Boolean
}

extend type Query {
    categories(
        search: String @scope(name: "search")
    ): [Category!]! @all(model: "App\\Modules\\Category\\Models\\Category")
    categoriesPaginate: [Category!]! @paginate(model: "App\\Modules\\Category\\Models\\Category")
    categoriesCount: Int! @count(model: "App\\Modules\\Category\\Models\\Category")
}

extend type Mutation {
    upsertCategory(input: CategoryInput! @spread): Category @upsert(model: "App\\Modules\\Category\\Models\\Category")
    deleteCategory(id: [ID!] @eq): [Category] @delete(model: "App\\Modules\\Category\\Models\\Category")
    restoreCategory(id: [ID!] @eq): [Category] @restore(model: "App\\Modules\\Category\\Models\\Category")
}