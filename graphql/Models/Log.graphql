type Log {
    id: ID!
    user: User @belongsTo
    event: String
    ip_address: String
    browser: String
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

input LogInput {
    user: ConnectUserRelation
    event: String
    ip_address: String
    browser: String
}

extend type Query {
    logs(
        search: String @scope(name: "search")
    ): [Log!]! @all(model: "App\\Modules\\Log\\Models\\Log")
    logsPaginate(
        search: String @scope(name: "search")
    ): [Log!]! @paginate(model: "App\\Modules\\Log\\Models\\Log")
}

extend type Mutation {
    upsertLog(input: LogInput! @spread): Log @upsert(model: "App\\Modules\\Log\\Models\\Log")
    deleteLog(id: [ID!] @eq): [Log] @delete(model: "App\\Modules\\Log\\Models\\Log")
    restoreLog(id: [ID!] @eq): [Log] @restore(model: "App\\Modules\\Log\\Models\\Log")
}
