type Contact {
    id: ID!
    user: User @belongsTo
    contact: User @belongsTo
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

input ContactInput {
    id: ID
    user: ConnectUserRelation
    contact: ConnectUserRelation
}

input ConnectContactRelation {
    id: ID
    connect: ID
    upsert: ContactInput
    delete: ID
}

input ConnectContactsRelation {
    id: [ID]
    connect: [ID]
    upsert: [ContactInput]
    delete: [ID]
}

extend type Query {
    contact(id: ID! @eq): Contact @find
    contacts(
        search: String @scope(name: "search")
    ): [Contact!]! @all(model: "App\\Modules\\Message\\Models\\Contact")
}

extend type Mutation {
    upsertContact(input: ContactInput! @spread): Contact @upsert(model: "App\\Modules\\Message\\Models\\Contact")
    deleteContact(id: ID! @eq): Contact @delete(model: "App\\Modules\\Message\\Models\\Contact")
    restoreContact(id: ID! @eq): Contact @restore(model: "App\\Modules\\Message\\Models\\Contact")
}
