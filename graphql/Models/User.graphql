type User {
    id: ID!
    name: String
    email: String
    password: String
    email_verified_at: DateTime
    jobs(status: JobStatus): [Job!]! @hasMany(type: PAGINATOR, scopes: ["userType"])
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

input UserInput {
    id: ID
    name: String
    email: String
    password: String @hash
}

type Query {
    me: User @auth(guards: "api")
    user(id: ID! @eq): User @find
    users(
        search: String @scope(name: "search")
    ): [User!]! @all
    usersPaginate: [User!]! @paginate
}

extend type Mutation {
    upsertUser(input: UserInput! @spread): User @upsert #@can(ability: "upsert")
    deleteUser(id: [ID!] @eq): [User] @delete #@can(ability: "delete", find: "id")
    restoreUser(id: [ID!] @eq): [User] @restore #@can(ability: "restore", find: "id")
}
