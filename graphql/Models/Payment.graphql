type Payment {
    id: ID!
    order: Order @belongsTo
    order_id: ID!
    amount: Float!
    payment_method: String!
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

input PaymentInput {
    id: ID
    order_id: ID!
    order: ConnectPaymentRelation
    amount: Float!
    payment_method: String!
}

input ConnectPaymentRelation {
    connect: ID
    create: [PaymentInput!]
    update: [PaymentInput!]
    delete: [ID]
}

extend type Query {
    paymentsPaginate: [Payment!]! @paginate
}

extend type Mutation {
    upsertPayment(input: PaymentInput! @spread): Payment @upsert #@can(ability: "upsert")
    restorePayment(id: [ID!] @eq): [Payment] @restore #@can(ability: "restore", find: "id")
    deletePayment(id: [ID!] @eq): [Payment] @delete #@can(ability: "delete", find: "id")
}