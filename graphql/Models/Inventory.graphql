type Inventory {
    id: ID!
    product_id: ID
    product: Product @belongsTo
    qty: Int!
    location: String
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

input InventoryInput {
    id: ID
    product: ConnectProductRelation
    qty: Int!
    location: String
}

input ConnectInventoriesRelation {
    connect: ID
    upsert: [InventoryInput!]!
    disconnect: Boolean
    delete: Boolean
}

input CartProductQuantityInput {
    product_id: ID!
    qty: Int!
}

extend type Query {
    inventories(
        search: String @scope(name: "search")
    ): [Inventory!]! @all
    inventoriesPaginate: [Inventory!]! @paginate
}

extend type Mutation {
    upsertInventory(input: InventoryInput! @spread): Inventory @upsert #@can(ability: "upsert")
    deleteInventory(id: [ID!] @eq): [Inventory] @delete #@can(ability: "delete", find: "id")
    reduceInventory(products: [CartProductQuantityInput!]!): [Inventory] @field(resolver: "InventoryResolver@reduceInventory")
}